server.port=${PORT:9000}

# Set here configurations for the database connection
spring.datasource.url=jdbc:postgresql://ec2-18-210-90-1.compute-1.amazonaws.com:5432/dcjdf2o35f1ddo
spring.datasource.username=fzgwcztvunxamy
spring.datasource.password=8b043b91876b7fcada1bb5c184fc195bff0b503df59f10461d87936a29ddc298
spring.datasource.driver-class-name=org.postgresql.Driver
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
spring.mvc.view.suffix=.java
spring.mvc.view.prefix=/demo/


spring.jpa.hibernate.ddl-auto=update
spring.datasource.initialization-mode=always
spring.datasource.platform=postgres
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
#spring.datasource.type: com.zaxxer.hikari.HikariDataSource
#spring.datasource.continue-on-error: true
#spring.datasource.hikari.minimum-idle: 5
#spring.datasource.hikari.connection-test-query: SELECT 1 FROM DUAL
#spring.datasource.hikari.maximum-pool-size: 20
#spring.datasource.hikari.auto-commit: true
#spring.datasource.hikari.idle-timeout: 30000
#spring.datasource.hikari.pool-name: SpringBootDemoHikariCP
#spring.datasource.hikari.max-lifetime: 60000 
#spring.datasource.hikari.connection-timeout: 300


## Server Config
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false 
#spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true 
#spring.jackson.serialization.fail-on-empty-beans=false
#spring.jpa.properties.hibernate.hbm2ddl.auto=none
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true

# Naming strategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect


spring.http.multipart.max-file-size=10MB
spring.http.multipart.max-request-size=10MB
chat.base.url=https://api.quickblox.com
